DROP TABLE PART;
DROP TABLE EXCUR;
DROP TABLE EXH;
DROP TABLE CUST;
DROP TABLE HALL;
DROP TABLE GUIDE;
DROP TABLE CRT;
DROP TABLE SUPP;



CREATE TABLE GUIDE( guideno INT NOT NULL, gname CHAR(10), gsur CHAR(10), salary INT, phone INT , PRIMARY KEY(guideno) );

CREATE TABLE HALL(hallno INT NOT NULL, hnum INT, floor INT, PRIMARY KEY(hallno));

CREATE TABLE EXCUR(excurno INT NOT NULL, price INT, date1 SMALLDATETIME, date2 SMALLDATETIME, gr_size INT, guideid INT NOT NULL, hallid INT NOT NULL, 
	CONSTRAINT FK_GUID_EXC  FOREIGN KEY (guideid) REFERENCES GUIDE(guideno),
	CONSTRAINT FK_HALL_EXC FOREIGN KEY (hallid) REFERENCES HALL(hallno),
	PRIMARY KEY(excurno));

CREATE TABLE CRT(crtno INT NOT NULL, crtname CHAR(10), crtsur CHAR(10), crtocup CHAR(10), PRIMARY KEY(crtno));

CREATE TABLE SUPP(suppno INT NOT NULL, sname CHAR(10), ssur CHAR(10), sphone INT, stype CHAR(10), PRIMARY KEY(suppno));

CREATE TABLE EXH(exhno INT NOT NULL, ename CHAR(30), date1 INT, categ CHAR(10), hallid INT NOT NULL, crtid INT NOT NULL, suppid INT NOT NULL,
	CONSTRAINT FK_HALL_EXH FOREIGN KEY (hallid) REFERENCES HALL(hallno),
	CONSTRAINT FK_CRT_EXH FOREIGN KEY (crtid) REFERENCES CRT(crtno),
	CONSTRAINT FK_SUPP_EXH FOREIGN KEY (suppid) REFERENCES SUPP(suppno),
	PRIMARY KEY(exhno));

CREATE TABLE CUST(custno INT NOT NULL, cname CHAR(10), csurm CHAR(10), PRIMARY KEY(custno));

CREATE TABLE PART(partno INT NOT NULL, custid INT NOT NULL, excurid INT NOT NULL,
	CONSTRAINT FK_CUST_PART FOREIGN KEY (custid) REFERENCES CUST(custno),
	CONSTRAINT FK_EXCUR_PART FOREIGN KEY (excurid) REFERENCES EXCUR(excurno),
	PRIMARY KEY(partno));

INSERT INTO CUST VALUES
(0001, 'YUTA','MAEJIMA');
INSERT INTO CUST VALUES
(0002, 'JAMES','BOND');
INSERT INTO CUST VALUES
(0003, 'CHLOE','CAMPBELL');

INSERT INTO GUIDE VALUES
(0001, 'OLIVER','CROMWELL',2200,12345678);
INSERT INTO GUIDE VALUES
(0002, 'JACK','MOORE',2400,12345438);
INSERT INTO GUIDE VALUES
(0003, 'EMILY','PARKER',2400,12312378);

INSERT INTO SUPP VALUES
(0001, 'BRIAN','ANDERSON',5345345,'DONATOR');
INSERT INTO SUPP VALUES
(0002, 'FRASER','BLACKHURST',3456544,'SELLER');
INSERT INTO SUPP VALUES
(0003, 'KAREN','CLARK',2434324,'DONATOR');

INSERT INTO CRT VALUES
(0001, 'RICHARD','CATW','ARTIST');
INSERT INTO CRT VALUES
(0002, 'PAUL','MAUSER','MANUFAC');
INSERT INTO CRT VALUES
(0003, 'JOSEPH','JOFFRE','OFFICER');
INSERT INTO CRT VALUES
(0004, 'ALFRED','LEETE','ARTIST');

INSERT INTO HALL VALUES
(0001, 0001, 1);
INSERT INTO HALL VALUES
(0002, 0002, 2);
INSERT INTO HALL VALUES
(0003, 0003, 1);

INSERT INTO EXH VALUES
(0001, 'CHARGE OF THE LIGHT BRIDGE',
1894, 'ART', 0001, 0001, 0001);
INSERT INTO EXH VALUES
(0002, 'Mauser Model 1871',
1871, 'WEAPONS', 0001, 0002, 0002);
INSERT INTO EXH VALUES
(0003, 'Plan XVII',
1894, 'BATTLEPLAN', 0002, 0001, 0003);
INSERT INTO EXH VALUES
(0004, 'LORD KITCHENER',
1914, 'ART', 0003, 0004, 0001);

INSERT INTO EXCUR VALUES
(0001, 200,CAST('2018-03-28 11:10' AS SMALLDATETIME),
CAST('2018-03-28 12:10' AS SMALLDATETIME),
1,0001,0001);
INSERT INTO EXCUR VALUES
(0002, 200,CAST('2018-03-28 15:10' AS SMALLDATETIME),
CAST('2018-03-28 16:10' AS SMALLDATETIME),
2,0002,0002);


INSERT INTO PART VALUES
(0001,0001,0001);
INSERT INTO PART VALUES
(0002,0002,0002);
INSERT INTO PART VALUES
(0003,0003,0002);

-- SUM ALL GUIDES SAL AFTER NEW GUIDE INSERT
/*
SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE REPORTSUM
AS
X NUMBER(5);
BEGIN
SELECT SUM(SALARY) INTO X FROM GUIDE;
DBMS_OUTPUT.PUT_LINE('SUM OF ALL GUIDES SALARIES: '|| X);
END;

CREATE OR REPLACE TRIGGER REFRESHSUM
AFTER INSERT ON GUIDE
BEGIN
EXECUTE REPORTSUM;
END;

GO
CREATE PROCEDURE REPORTSUM @CITY1 VARCHAR(12), @CITY2 VARCHAR(12)
AS
UPDATE AEMP
SET DEPTNO=(SELECT DEPTNO FROM ADEPT WHERE LOC=@CITY2)
FROM AEMP,ADEPT
WHERE AEMP.DEPTNO=ADEPT.DEPTNO AND LOC=@CITY1;
GO
*/

----------------------------------------------------------
-- TRIGGER -- COUNT NUMBER OF SUPPLIERS AFTER NEW INSERT
GO
CREATE TRIGGER T_COUNTSUPP
ON dbo.SUPP
FOR INSERT
AS
DECLARE @AMOUNT INT
BEGIN
	SELECT @AMOUNT = COUNT(SUPPNO)
	FROM SUPP
	PRINT 'NUMBER OF SUPPLIERS IS ' + CAST(@AMOUNT AS VARCHAR)
END;

INSERT INTO SUPP VALUES
(0005, 'TNAME','TSUR',2434324,'SUPPLIER');


---------------
--TRIGGER --  CHECK IF NEWLY UPDATED SALARY IS NOT THE SAME AS OLD ONE

DROP TRIGGER UPDATESAL;
GO
CREATE TRIGGER UPDATESAL
ON dbo.GUIDE
FOR UPDATE
AS 
BEGIN
	DECLARE @SAL1 INT, @SAL2 INT
	SELECT @SAL1 = SALARY FROM INSERTED;
	SELECT @SAL2 = SALARY FROM DELETED;
	PRINT 'HEY'
	IF @SAL1 = @SAL2
	BEGIN
	ROLLBACK;
	raiserror  ('SAME SALARY',10,1) WITH NOWAIT
	END;
END;

UPDATE GUIDE
SET salary=2200
WHERE salary=2200;
SELECT * FROM GUIDE;

-------------
-- TRIGGER -- REMOVE SPECIFIED EXHIBIT AND SHOW FROM WHICH HALL

DROP TRIGGER DELEXH
GO
CREATE TRIGGER DELEXH
ON EXH
FOR DELETE
AS
BEGIN
	DECLARE @HALL INT, @EXHNAME VARCHAR(30)
	SELECT @HALL = HALLID FROM DELETED;
	SELECT @EXHNAME = ENAME FROM DELETED;
	PRINT 'FROM HALL ' + CAST(@HALL AS VARCHAR) + ' HAS BEEN DELETED EXHIBIT ' + @EXHNAME
END;

DELETE FROM EXH WHERE EXHNO=0004;
INSERT INTO EXH VALUES
(0004, 'LORD KITCHENER',
1914, 'ART', 0003, 0004, 0001);

-----------------------------------------------------------------
-- PROCEDURE -- return -- return number of all ppl in database
DROP PROCEDURE P_NUMPPL
GO
CREATE PROCEDURE P_NUMPPL
AS
DECLARE @AMOUNT INT
BEGIN
	SELECT @AMOUNT = COUNT(CUSTNO) FROM CUST;
	SELECT @AMOUNT += COUNT(GUIDENO) FROM GUIDE;
	SELECT @AMOUNT += COUNT(SUPPNO) FROM SUPP;

	RETURN @AMOUNT
END;

DECLARE @NUMPPL INT
EXECUTE  @NUMPPL = P_NUMPPL;
PRINT @NUMPPL;

SELECT * FROM CUST;
SELECT * FROM GUIDE;
SELECT * FROM SUPP;

------------------------
-- PROCEDURE -- OUTPUT -- RETURN NUMBER OF EXCURSION DATETIME THAT STARTS BETWEEN GIVEN 2 DATETIMES 
DROP PROCEDURE EXCURBYTIME;
GO
CREATE PROCEDURE EXCURBYTIME @P_DATE1 SMALLDATETIME, @P_DATE2 SMALLDATETIME,
@P_COUNT INT OUTPUT
AS
BEGIN
	SELECT @P_COUNT = COUNT(DATE1)
	FROM EXCUR 
	WHERE DATE1 BETWEEN @P_DATE1 AND @P_DATE2;
END;

DECLARE @START INT,@DATE1 SMALLDATETIME,@DATE2 SMALLDATETIME;
SELECT @DATE1 = CAST('2018-03-28 9:10' AS SMALLDATETIME);
SELECT @DATE2 = CAST('2018-03-28 20:10' AS SMALLDATETIME);
EXEC EXCURBYTIME  @P_DATE1=@DATE1, @P_DATE2 = @DATE2 ,@P_COUNT= @START OUTPUT;
PRINT @START;

------------------------
-- PROCEDURE -- SET -- SHOW EXCURSIONS DONE BY A GIVEN GUIDE
DROP PROCEDURE EXCURBYGUIDE;
GO
CREATE PROCEDURE EXCURBYGUIDE @P_GUIDE INT
AS
BEGIN
	SELECT EXCURNO,DATE1
	FROM EXCUR
	WHERE GUIDEID=@P_GUIDE;
END;

EXEC EXCURBYGUIDE 0002;

-------------------------------------------------------------------------------